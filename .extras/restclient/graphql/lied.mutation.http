// Copyright (C) 2020 - present Juergen Zimmermann, Hochschule Karlsruhe
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

//
// N e t z w e r k   -   V e r b i n d u n g   n o t w e n d i g
//

### Einloggen in der Rolle "admin", "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "alfred.alpha", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "dirk.delta", password: "p") { token expiresIn roles }
}

### Einloggen mit falschem Passwort
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "FALSCH") { token expiresIn roles }
}

### Neues Lied anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      titel: "Neuer Titel"
      rating: 1,
      art: MP3,
      datum: "2022-01-31",
      schlagwoerter: ["JAVASCRIPT", "TYPESCRIPT"],
      kuenstler: [{
        name: "Neuer Kuenstler"
      }]
    }
  )
}

### Neues Lied mit ungueltigen Daten anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      titel: "Escape"
      rating: -1,
      art: XD,
      datum: "2022-31-31",
      schlagwoerter: ["JAVASCRIPT", "TYPESCRIPT"],
      kuenstler: [{
        name: "Neuer Kuenstler"
      }]
    }
  )
}

### Vorhandenes Lied aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "2",
      version: 0,
      titel: "Update Titel"
      rating: 1,
      art: MP3,
      datum: "2022-01-31",
      schlagwoerter: ["JAVASCRIPT", "TYPESCRIPT"],
    }
  )
}

### Vorhandenes Lied mit ungueltigen Werten aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "2",
      version: 0,
      titel: "Update Titel",
      rating: -1,
      art: MP3,
      datum: "1333-0331-31",
      schlagwoerter: ["JAVASCRIPT", "TYPESCRIPT"],
    }
  )
}

### Nicht-Vorhandenes Lied aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "999999",
      version: 0,
      titel: "Update Titel"
      rating: 4,
      art: MP3,
      datum: "2022-01-31",
      schlagwoerter: ["JAVASCRIPT", "TYPESCRIPT"],
    }
  )
}

### Vorhandenes Lied loeschen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  delete(id: "3")
}

### Test Lied 
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
                    create(
                        input: {
                            rating: -1,
                            art: MP3,
                            datum: "12345-123-123",
                            titel: "Lied mit ungueltigen Werten neu anlegen",
                            kuenstler: [{
                                name: "KÃ¼nstlerName",
                            }]
                        }
                    )
                }