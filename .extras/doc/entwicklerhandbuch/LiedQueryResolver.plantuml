' Copyright (C) 2019 - present Juergen Zimmermann, Hochschule Karlsruhe
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <https://www.gnu.org/licenses/>.

' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Query" as Query
  hide Query circle

  class "@Args" as Args
  hide Args circle

  Resolver .left[hidden].> Promise
}

package lied {
  package entity {
    class Lied <<entity>>
  }

  package service {
    class LiedReadService << control >>
  }

  package graphql #DDDDDD {
    class "type LiedDTO = Omit<Lied, 'aktualisiert' | 'erzeugt' | 'schlagwoerter'> & { schlagwoerter: string[] }" as LiedDTO
    hide LiedDTO circle

    class LiedQueryResolver << control >> << @Resolver() >> << @UseInterceptors() >> {
      + @Query() async findById(@Args() id: string): Promise<LiedDTO>
      + @Query() async find(@Args() titel: string |undefined): Promise<LiedDTO[]>
    }

    LiedQueryResolver o-up-> "1" LiedReadService : service
    LiedQueryResolver ..> LiedDTO
    LiedDTO ..> Lied
    LiedQueryResolver ..> Resolver

    LiedQueryResolver ..> Promise

    LiedDTO .[hidden].> Lied
    Lied .[hidden].> Promise
    LiedReadService .[hidden].> Promise
    Lied .[hidden].> Resolver
    LiedReadService .[hidden].> Resolver
  }
}

hide empty members

footer (c) Juergen Zimmermann

@enduml
